'use client';

import { motion } from 'framer-motion';
import { useState, useEffect } from 'react';
import React from 'react';

// Add JSX namespace for TypeScript
declare global {
  namespace JSX {
    interface IntrinsicElements {
      [elemName: string]: any;
    }
  }
}

interface FeatureCardProps {
  icon: React.ReactNode;
  title: string;
  description: string;
  index: number;
}

const FeatureCard = ({ icon, title, description, index }: FeatureCardProps) => {
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ delay: index * 0.1, duration: 0.5 }}
      className="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow duration-300 border border-gray-100 hover:border-green-100"
    >
      <div className="w-12 h-12 mb-4 flex items-center justify-center rounded-lg bg-green-50 text-green-600">
        {icon}
      </div>
      <h3 className="text-lg font-semibold text-gray-900 mb-2">{title}</h3>
      <p className="text-gray-600 text-sm">{description}</p>
    </motion.div>
  );
};

interface StepCardProps {
  number: number;
  title: string;
  description: string;
  isActive: boolean;
  onClick?: () => void;
}

const StepCard = ({ number, title, description, isActive, onClick }: StepCardProps) => {
  return (
    <motion.div 
      className={`relative flex flex-col items-center p-6 rounded-xl transition-all duration-300 cursor-pointer ${
        isActive ? 'bg-[#f1f8e9] border-2 border-[#c5e1a5] scale-105' : 'bg-gray-50 border border-gray-100'
      }`}
      whileHover={{ scale: 1.03 }}
      onClick={onClick}
    >
      <div className={`w-12 h-12 rounded-full flex items-center justify-center mb-4 ${
        isActive ? 'bg-[#7cb342] text-white' : 'bg-gray-200 text-gray-600'
      } font-bold text-xl`}>
        {number}
      </div>
      <h3 className="text-lg font-semibold text-gray-900 mb-2 text-center">{title}</h3>
      <p className="text-gray-600 text-sm text-center">{description}</p>
    </motion.div>
  );
};

const Work = () => {
  const [activeStep, setActiveStep] = useState(1);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    // Simulate loading
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 800);

    // Auto-rotate steps
    const interval = setInterval(() => {
      setActiveStep(prev => (prev % 3) + 1);
    }, 4000);

    return () => {
      clearTimeout(timer);
      clearInterval(interval);
    };
  }, []);

  const features = [
    {
      title: "Real-time Monitoring",
      description: "Track your biogas production and system health in real-time.",
      icon: (
        <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
        </svg>
      )
    },
    {
      title: "Smart Alerts",
      description: "Get instant notifications for critical conditions.",
      icon: (
        <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" />
        </svg>
      )
    },
    {
      title: "Data Analytics",
      description: "Gain insights with detailed reports and analytics.",
      icon: (
        <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
        </svg>
      )
    }
  ];

  const steps = [
    {
      number: 1,
      title: "Setup & Connect",
      description: "Install the device and connect it to your biogas system.",
      content: "Our setup wizard guides you through the installation process with easy-to-follow steps and video tutorials."
    },
    {
      number: 2,
      title: "Monitor & Analyze",
      description: "View real-time data and system health metrics.",
      content: "Get instant access to key metrics and visualizations to track your biogas production and system performance."
    },
    {
      number: 3,
      title: "Optimize & Save",
      description: "Improve efficiency with data-driven insights.",
      content: "Use our AI-powered recommendations to optimize your biogas production and reduce operational costs."
    }
  ];

  if (isLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="animate-pulse flex flex-col items-center">
          <div className="w-16 h-16 bg-green-200 rounded-full mb-4"></div>
          <div className="h-4 bg-gray-200 rounded w-48"></div>
        </div>
      </div>
    );
  }

  return (
    <motion.main 
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      className="min-h-screen bg-gray-50 py-16 px-4"
    >
      {/* Hero Section */}
      <section className="max-w-6xl mx-auto text-center mb-16">
        <motion.div 
          initial={{ y: -20, opacity: 0 }}
          animate={{ y: 0, opacity: 1 }}
          transition={{ duration: 0.5 }}
          className="mb-6"
        >
          <span className="inline-block px-3 py-1 text-sm font-medium text-green-800 bg-green-100 rounded-full mb-4">
            How It Works
          </span>
          <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            Smart Biogas Monitoring
            <span className="text-[#7cb342]"> Made Simple</span>
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Monitor, analyze, and optimize your biogas production with our intuitive platform
          </p>
        </motion.div>
      </section>

      {/* Features Grid */}
      <section className="max-w-6xl mx-auto mb-20">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {features.map((feature, index) => (
            <FeatureCard
              key={index}
              icon={feature.icon}
              title={feature.title}
              description={feature.description}
              index={index}
            />
          ))}
        </div>
      </section>

      {/* Steps Section */}
      <section className="max-w-4xl mx-auto mb-20">
        <h2 className="text-3xl font-bold text-center text-gray-900 mb-12">
          How It Works
        </h2>
        
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
          {steps.map((step) => (
            <div key={step.number} onClick={() => setActiveStep(step.number)}>
              <StepCard 
                number={step.number}
                title={step.title}
                description={step.description}
                isActive={activeStep === step.number}
              />
            </div>
          ))}
        </div>

        {/* Step Content */}
        <motion.div 
          key={activeStep}
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          className="bg-white rounded-xl p-8 shadow-lg border border-gray-100"
        >
          <h3 className="text-2xl font-bold text-gray-900 mb-4">{steps[activeStep - 1].title}</h3>
          <p className="text-gray-600">{steps[activeStep - 1].content}</p>
        </motion.div>
      </section>

      {/* CTA Section */}
      <section className="max-w-2xl mx-auto text-center py-16 px-4">
        <div className="bg-gradient-to-r from-[#7cb342] to-[#558b2f] rounded-2xl p-8 shadow-lg">
          <h2 className="text-2xl md:text-3xl font-bold text-white mb-4">Ready to optimize your biogas production?</h2>
          <p className="text-green-100 mb-8">Join hundreds of satisfied customers who trust our monitoring solution.</p>
          <div className="flex flex-col sm:flex-row justify-center gap-4">
            <button className="px-6 py-3 bg-white text-[#558b2f] font-medium rounded-lg hover:bg-[#f1f8e9] transition-colors">
              Get Started
            </button>
            <button className="px-6 py-3 border-2 border-white text-white font-medium rounded-lg hover:bg-white/10 transition-colors">
              Schedule Demo
            </button>
          </div>
        </div>
      </section>
    </motion.main>
  );
};

export default Work;